{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "7v8y864cukbqy"
  },
  "info": {
    "title": "express API",
    "version": "0.5",
    "contact": {
      "name": "Juanjo Lopez",
      "email": "juanjoselopez@usal.es",
      "url": "https://github.com/JuanjoLopez19/AutomatAPI"
    },
    "description": "Express + Nodejs backend for auth and user management"
  },
  "servers": [
    {
      "url": "https://automatapi.ddns.net:34",
      "description": "Node Backend"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": " "
    },
    {
      "name": "Login",
      "description": " "
    },
    {
      "name": "Register",
      "description": " "
    }
  ],
  "paths": {
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Auth",
          "Login"
        ],
        "summary": "Validate an user",
        "operationId": "post-auth-signin",
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "48pbgts2djprp"
                      }
                    },
                    "status": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "k2hd7um4zcyde"
                      }
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            },
            "headers": {
              "JWT": {
                "schema": {
                  "type": "string"
                },
                "description": "JWT token to authenticate the user"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "3rsd81wkik2k4"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "obgb2pch2pr0k"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Bad Request",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "qynic4mu0d1n3"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "qd8eg2ebz439l"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Invalid password",
                      "status": 401
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "5m4okn3fid7bq"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "5of2umcwqyf9n"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "User not found",
                      "status": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "x-stoplight": {
                        "id": "u3te5gxk3topa"
                      }
                    },
                    "status": {
                      "type": "integer",
                      "x-stoplight": {
                        "id": "zzrl2jut1b0s1"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Internal Server error",
                      "status": 500
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint that allow the user to sign up on the platform",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "mj776vn2rjq3i"
                    }
                  },
                  "password": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "adh4xfz6a3a0p"
                    }
                  }
                }
              }
            }
          },
          "description": "The data of the login form"
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Auth",
          "Register"
        ],
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "201": {
            "description": "User created and return the jwt token with the data of the user created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "User created succesfully",
                      "status": 201,
                      "data": {
                        "id": 10,
                        "firstName": "User",
                        "lastName": "Name",
                        "email": "user@example.com",
                        "date": "1997-10-31",
                        "username": "Usernmae",
                        "role": "client"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Username or email not provided",
                      "status": 400
                    }
                  },
                  "Example 2": {
                    "value": {
                      "message": "Username or email in used",
                      "status": 400
                    }
                  },
                  "Example 3": {
                    "value": {
                      "message": "Content cannot be empty",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Some error ocurred while creating the user",
                      "status": 500
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Validate the data for the new user and if it proceed create a new one"
      },
      "parameters": []
    },
    "/api/auth/signout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Log out an user",
        "operationId": "post-api-auth-logout",
        "responses": {
          "200": {
            "description": "User logged out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "User logged out",
                      "status": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Invalid JWT token",
                      "status": 400
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint that makes the user logout of the platform",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "cookie",
            "name": "JWT",
            "description": "JWT toke that allow the platform to authenticate the user"
          }
        ]
      },
      "parameters": []
    },
    "/api/auth/remember_password": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Remember password",
        "operationId": "getapi-auth-remember_password",
        "responses": {
          "200": {
            "description": "Email with the token sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Email sent succesfully",
                      "status": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (no body provided)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Bad Request",
                      "status": 400,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (No user associated to the query params)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Not found",
                      "status": 404,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error (While finding the user or sending the email)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Internal server error",
                      "status": 500,
                      "data": {}
                    }
                  },
                  "Example 2": {
                    "value": {
                      "message": "Some error ocurred",
                      "status": 500,
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint that makes the server send an email with the password token associated to the username and the email given as query parameters",
        "requestBody": {
          "content": {}
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "username",
            "description": "username of the account"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "email",
            "description": "email to send the token"
          }
        ]
      }
    },
    "/api/auth/reset_password": {
      "put": {
        "summary": "Reset password",
        "operationId": "putapi-auth-change_password",
        "responses": {
          "200": {
            "description": "The password was updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Password changed succesfully",
                      "status": 200,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (Body not provided)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Bad request",
                      "status": 400,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (user not associated to token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Not found",
                      "status": 404,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Some error ocurred",
                      "status": 500,
                      "data": {}
                    }
                  },
                  "Example 2": {
                    "value": {
                      "message": "Internal server error",
                      "status": 500,
                      "data": {}
                    }
                  },
                  "Example 3": {
                    "value": {
                      "message": "Some error ocurred while changing the password",
                      "status": 500,
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This endpoint allow the user to change the password in case he has forgotten it",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "dcuocmm7mf7m5"
                    }
                  },
                  "password": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "c6dg2jgecrwll"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      },
      "parameters": []
    },
    "/api/auth/activate_account": {
      "put": {
        "summary": "Activate account",
        "operationId": "putapi-auth-activate_account",
        "responses": {
          "200": {
            "description": "The account has been activated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request (No token provided)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Bad request",
                      "status": 400,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (User already active)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "User already active",
                      "status": 401,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found (user no associated to the token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Not found",
                      "status": 404,
                      "data": {}
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "message": "Some error ocurred",
                      "status": 500,
                      "data": {}
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Endpoint that allow the user to activate his account and be able to access to the platform",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "x-stoplight": {
                      "id": "gyccxdviy8yex"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/api/auth/checkToken": {
      "get": {
        "summary": "",
        "operationId": "getapi-auth-checkToken",
        "responses": {
          "200": {
            "description": "The session is correct, the user data will be send",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "description": "Used to check if the session has expired, or if the request is valid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "cookie",
            "name": "JWT",
            "description": "JWT token"
          }
        ]
      }
    },
    "/api/auth/complete_registration": {
      "post": {
        "summary": "",
        "operationId": "post-api-auth-complete_registration",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/authorize": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-api-auth-authorize"
      }
    },
    "/api/auth/generate_session": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-api-auth-generate_session"
      }
    },
    "/users/": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users"
      }
    },
    "/users/delete": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-delete"
      }
    },
    "/users/deleteAccount": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-deleteAccount"
      }
    },
    "/users/editAccount": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-editAccount"
      }
    },
    "/users/editPassword": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-editPassword"
      }
    },
    "/users/editPasswordAdmin": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-editPasswordAdmin"
      }
    },
    "/users/getUserInfo": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-users-getUserInfo"
      }
    },
    "/templates/flask": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-flask"
      }
    },
    "/templates/express": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-express"
      }
    },
    "/templates/django": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-django"
      }
    },
    "/templates/": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates"
      }
    },
    "/templates/deleteTemplate": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-deleteTemplate"
      }
    },
    "/templates/deleteTemplateAdmin": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-deleteTemplateAdmin"
      }
    },
    "/templates/getToken": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-template-getToken"
      },
      "parameters": []
    },
    "/templates/getTemplateStats": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-getTemplateStats"
      }
    },
    "/templates/getUserTemplateStats": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-getUserTemplateStats"
      }
    },
    "/templates/getTemplateConfig": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-getTemplateConfig"
      }
    },
    "/templates/editTemplate": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-templates-editTemplate"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "x-examples": {
          "Alice Smith": {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        },
        "description": "User model that identifies it by role",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string",
            "description": "Name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "email given on the sign up for the platform"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31",
            "x-stoplight": {
              "id": "mzjp642louwxx"
            },
            "description": "Date birth of the user"
          },
          "username": {
            "type": "string",
            "x-stoplight": {
              "id": "gnyww40qmzuuj"
            },
            "description": "Nickname that the user has provided"
          },
          "role": {
            "type": "string",
            "x-stoplight": {
              "id": "88cfi4yo2pyyk"
            },
            "description": "Role that is used to navigate on the platform"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "date",
          "username",
          "role"
        ],
        "x-stoplight": {
          "id": "7v8y864cukbqy"
        }
      },
      "Response": {
        "title": "Response",
        "x-stoplight": {
          "id": "7v8y864cukbqy"
        },
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "x-stoplight": {
              "id": "rjbivm6ej7s5o"
            }
          },
          "status": {
            "type": "integer",
            "x-stoplight": {
              "id": "sizk9akq4ceby"
            }
          },
          "data": {
            "type": "object",
            "x-stoplight": {
              "id": "y6paqxtaa51lp"
            }
          }
        },
        "required": [
          "message",
          "status"
        ],
        "description": "Response model is not a real model just for simplicity"
      }
    }
  },
  "x-internal": false,
  "x-extension-1": null
}