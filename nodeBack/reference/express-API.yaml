openapi: 3.0.0
x-stoplight:
  id: 7v8y864cukbqy
info:
  title: express API
  version: '0.0'
  contact:
    name: Juanjo Lopez
    email: juanjoselopez@usal.es
    url: 'https://github.com/JuanjoLopez19/AutomatAPI'
  description: Express + Nodejs backend for auth and user management
servers:
  - url: 'http://localhost:3486'
tags:
  - name: Login
    description: Login tag
  - name: Register
    description: Register tag
paths:
  /api/auth/signin:
    parameters: []
    post:
      summary: ''
      operationId: post-auth-signin
      responses:
        '200':
          description: User logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 48pbgts2djprp
                  status:
                    type: string
                    x-stoplight:
                      id: k2hd7um4zcyde
                  data:
                    $ref: '#/components/schemas/User'
                    x-stoplight:
                      id: yy9lhi7p75twd
          headers:
            JWT:
              schema:
                type: string
              description: JWT token to authenticate the user
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 3rsd81wkik2k4
                  status:
                    type: integer
                    x-stoplight:
                      id: obgb2pch2pr0k
              examples:
                Example 1:
                  value:
                    message: Bad Request
                    status: 400
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: qynic4mu0d1n3
                  status:
                    type: integer
                    x-stoplight:
                      id: qd8eg2ebz439l
              examples:
                Example 1:
                  value:
                    message: Invalid password
                    status: 401
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: 5m4okn3fid7bq
                  status:
                    type: integer
                    x-stoplight:
                      id: 5of2umcwqyf9n
              examples:
                Example 1:
                  value:
                    message: User not found
                    status: 404
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    x-stoplight:
                      id: u3te5gxk3topa
                  status:
                    type: integer
                    x-stoplight:
                      id: zzrl2jut1b0s1
              examples:
                Example 1:
                  value:
                    message: Internal Server error
                    status: 500
      description: Endpoint that allow the user to sign up on the platform
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  x-stoplight:
                    id: mj776vn2rjq3i
                password:
                  type: string
                  x-stoplight:
                    id: adh4xfz6a3a0p
        description: The data of the login form
  /api/auth/signup:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    parameters: []
  /api/auth/logout:
    post:
      summary: ''
      operationId: post-api-auth-logout
      responses:
        '200':
          description: User logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              examples:
                Example 1:
                  value:
                    message: User logged out
                    status: 200
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              examples:
                Example 1:
                  value:
                    message: Invalid JWT token
                    status: 400
      description: Endpoint that makes the user logout of the platform
      parameters:
        - schema:
            type: string
          in: cookie
          name: JWT
          description: JWT toke that allow the platform to authenticate the user
components:
  schemas:
    User:
      title: User
      type: object
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      description: User model that identifies it by role
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
          description: Name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          format: email
          description: email given on the sign up for the platform
        date:
          type: string
          format: date
          example: '1997-10-31'
          x-stoplight:
            id: mzjp642louwxx
          description: Date birth of the user
        username:
          type: string
          x-stoplight:
            id: gnyww40qmzuuj
          description: Nickname that the user has provided
        role:
          type: string
          x-stoplight:
            id: 88cfi4yo2pyyk
          description: Role that is used to navigate on the platform
      required:
        - id
        - firstName
        - lastName
        - email
    Response:
      title: Response
      x-stoplight:
        id: 1kvfxmsq6fb7c
      type: object
      properties:
        message:
          type: string
          x-stoplight:
            id: rjbivm6ej7s5o
        status:
          type: integer
          x-stoplight:
            id: sizk9akq4ceby
        data:
          type: object
          x-stoplight:
            id: y6paqxtaa51lp
      required:
        - message
        - status
      description: Response model is not a real model just for simplicity
x-internal: false
x-extension-1: null
